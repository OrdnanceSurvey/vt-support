version: 2.1

parameters:
  envs:
    type: string
    description: |
      comma-separated list of all environment variables to extract.
      For example: "AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY"
    default: "PGP_KEY,PGP_KEY_ID,PGP_PASSWORD"

jobs:
  build:
    docker:
      - image: cimg/python:3.10
    resource_class: small
    steps:
      - run:
          name: extract <<pipeline.parameters.envs>> to CSV
          shell: '/usr/bin/env python'
          command: |
            import csv
            import os
            from typing import List
            def get_env_vars(keys: List[str]) -> List[dict]:
                return [
                    {"key": key, "value": os.environ[key]}
                    for key in keys
                ]
                
            def to_csv(env_vars: List[dict], out: str = "extracted.csv"):
                with open(out, 'w') as outfile:
                    w = csv.DictWriter(outfile, fieldnames=["key", "value"])
                    w.writeheader()
                    w.writerows(env_vars)
                    print(f"[success] written to {out}")
            ENV_VARS = "<<pipeline.parameters.envs>>"
            to_csv(get_env_vars(ENV_VARS.split(",")))
      - store_artifacts:
          path: /home/circleci/project/extracted.csv
