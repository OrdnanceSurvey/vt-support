version: 2.0

jobs:
    build:
        docker:
            - image: circleci/openjdk:8u181-jdk-stretch
        steps:
            - checkout
            - restore_cache:
                keys:
                    - gradle-{{ checksum "build.gradle" }}
            # note: batch is required because newer gpg stores in different format
            # see: https://dev.gnupg.org/T2313
            - run:
                name: restore config
                command: |
                  echo v2
                  echo $PGP_KEY | base64 --decode | base64 --decode > ~/sec_key.gpg
                  gpg --import --batch --allow-secret-key-import ~/sec_key.gpg
                  gpg --batch --pinentry-mode=loopback --passphrase $PGP_PASSWORD --export-secret-keys > $HOME/.gnupg/secring.gpg
                  rm ~/sec_key.gpg
                  mkdir -p ~/.gradle
                  echo "defining gradle signing config"
                  echo "signing.keyId=$PGP_KEY_ID" >> ~/.gradle/gradle.properties
                  echo "signing.password=$PGP_PASSWORD" >> ~/.gradle/gradle.properties
                  echo "signing.secretKeyRingFile=$HOME/.gnupg/secring.gpg" >> ~/.gradle/gradle.properties
            # gradle fails without term env variable
            # see: https://discuss.circleci.com/t/circleci-terminal-is-a-tty-but-term-is-not-set/9965/20
            # TODO enable spotbugs when stable - run: export TERM=xterm && ./gradlew clean test testi license pmdMain pmdTest findbugsMain findbugsTest checkStyleMain checkStyleTest checkStyleTestI
            - run: export TERM=xterm && ./gradlew clean test testi license pmdMain pmdTest checkStyleMain checkStyleTest checkStyleTestI
            - run:
                name: deploy if master
                command: |
                  if [ "${CIRCLE_BRANCH}" == "master" ]; then
                    export TERM=xterm && ./gradlew clean test uploadArchives
                  fi
            - save_cache:
                paths:
                    - ~/.gradle
                key: gradle-{{ checksum "build.gradle" }}
            - store_artifacts:
                path: build/distributions
                destination: distributions
            - store_artifacts:
                path: build/libs
                destination: libs
