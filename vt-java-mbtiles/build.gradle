apply plugin: 'java'

version =  VERSION_NAME
group =  GROUP

compileJava {
    sourceCompatibility = rootProject.ext.sourceCompatibilityVersion
    targetCompatibility = rootProject.ext.targetCompatibilityVersion
}

configurations {
    provided
    testiCompile.extendsFrom testCompile
    testiRuntime.extendsFrom testRuntime
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
    testi {
        java.srcDir('src/testi/java')
        resources.srcDir('src/testi/resources')
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

// tag::dependencies[]
dependencies {
    compile project(':vt-java')

    compile 'org.xerial:sqlite-jdbc:3.20.1'
    compile 'com.google.guava:guava:23.3-jre'
    compile 'com.github.davidmoten:rxjava2-jdbc:0.1-RC23'
    compile 'org.slf4j:slf4j-api:1.7.25'
    testiCompile 'org.skyscreamer:jsonassert:1.5.0'
    testCompile deps.junit
    
}
// end::dependencies[]

// tag::wrapper[]
task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}
// end::wrapper[]

// ---------------------------------------------------------------------------------------------------------------------
// - Integration Test
// - https://gradle.org/migrating-a-maven-build-to-gradle/
// ---------------------------------------------------------------------------------------------------------------------
task testi(type: Test) {
    description = "Runs the integration tests"
    group = "verification"
    testClassesDir = sourceSets.testi.output.classesDir
    classpath = sourceSets.testi.runtimeClasspath
    mustRunAfter test
}

apply from: rootProject.file('gradle/gradle-mvn-push-java.gradle')